// <auto-generated />
using System;
using Infrastructure.Repository.RepositoryImplement;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastructure.Repository.Migrations
{
    [DbContext(typeof(EFContext))]
    [Migration("20190825072357_changeTable")]
    partial class changeTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.MenuService.Entity.ChildMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ChildMenuName");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<DateTime?>("LastModifyOn");

                    b.Property<int>("MenuId");

                    b.Property<string>("Url");

                    b.Property<string>("ViewId");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("childmenus");
                });

            modelBuilder.Entity("Domain.MenuService.Entity.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<DateTime?>("LastModifyOn");

                    b.Property<string>("MenuName");

                    b.Property<string>("Test");

                    b.HasKey("Id");

                    b.ToTable("menus");
                });

            modelBuilder.Entity("Domain.MenuService.Entity.ChildMenu", b =>
                {
                    b.HasOne("Domain.MenuService.Entity.Menu", "Menu")
                        .WithMany("childMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
